/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Article as PrismaArticle } from "@prisma/client";

export class ArticleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ArticleCountArgs, "select">): Promise<number> {
    return this.prisma.article.count(args);
  }

  async articles(args: Prisma.ArticleFindManyArgs): Promise<PrismaArticle[]> {
    return this.prisma.article.findMany(args);
  }
  async article(
    args: Prisma.ArticleFindUniqueArgs
  ): Promise<PrismaArticle | null> {
    return this.prisma.article.findUnique(args);
  }
  async createArticle(args: Prisma.ArticleCreateArgs): Promise<PrismaArticle> {
    return this.prisma.article.create(args);
  }
  async updateArticle(args: Prisma.ArticleUpdateArgs): Promise<PrismaArticle> {
    return this.prisma.article.update(args);
  }
  async deleteArticle(args: Prisma.ArticleDeleteArgs): Promise<PrismaArticle> {
    return this.prisma.article.delete(args);
  }
}
